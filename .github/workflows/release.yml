name: Automatic Releases
on:
  push:
    tags:
      - "v*"
jobs:
  release:
    name: "Release"
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        id: commit
        run: |
          echo "Build project"
          lasttag="$(git describe --tags --abbrev=0 @^)"
          echo ::set-output name=body::"$(git log --oneline $lasttag..@)"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: ${{ steps.commit.outputs.body}}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: app/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/zip
